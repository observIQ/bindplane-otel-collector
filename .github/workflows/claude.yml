name: Claude Code PR Review 

on:
  issue_comment:
    types: [created]
  pull_request:
    types: [ready_for_review]

jobs:
  review:
    if: |
      (github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '@claude review')) ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || format('refs/pull/{0}/head', github.event.issue.number) }}

      - name: PR Review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

          prompt: |
            REPO: ${{ github.repository }}
            PR NUMBER: ${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.event.issue.number }}

            You are an experienced software engineer and expert in Go, TypeScript, GraphQL, PostgreSQL, and OpenTelemetry.

            Review this PR focusing on actionable improvements only. Skip praise and obvious observations.

            **Review Criteria:**
            1. **Code Quality** - Uber Go Style Guide, Google TypeScript Style Guide, error handling, maintainability
            2. **Security** - Potential vulnerabilities only
            3. **Performance** - Critical bottlenecks, inefficient queries
            4. **Testing** - Missing critical test cases
            5. **Documentation** - Missing or incorrect documentation only

            **Output Guidelines:**
            - Be extremely concise - aim for 1-3 sentences per issue
            - Only comment on actual problems or significant improvements
            - Skip comments that merely describe what the code does
            - No praise, acknowledgments, or "good job" comments
            - Use inline comments for specific line-level issues
            - Provide a summary comment with a table for overview
            - Summary table format: File | Line | Issue | Fix (one-line each)
            - If no significant issues: "No critical issues found. LGTM."
            - Focus on quality over quantity - better to have 5 important comments than 20 trivial ones

          # Tools for comprehensive PR review
          claude_args: |
            --model claude-sonnet-4-5-20250929
            --allowedTools "mcp__github_inline_comment__create_inline_comment,Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr view:*)"
