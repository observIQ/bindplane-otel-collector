version: 0.1.1
title: Wildfly
description: Log parser for Wildfly
parameters:
  - name: standalone_file_path
    description: Path to standalone file logs
    type: "[]string"
    default:
      - "/opt/wildfly/standalone/log/server.log"
  - name: enable_domain_server
    description: Enable to collect domain server logs
    type: bool
    default: true
  - name: domain_server_path
    description: Path to domain server logs
    type: "[]string"
    default:
      - "/opt/wildfly/domain/servers/*/log/server.log"
  - name: enable_domain_controller
    description: Enable to collect domain controller logs
    type: bool
    default: true
  - name: domain_controller_path
    description: Path to domain controller logs
    type: "[]string"
    default:
      - "/opt/wildfly/domain/log/*.log"
  - name: start_at
    description: At startup, where to start reading logs from the file (`beginning` or `end`)
    type: string
    supported:
      - beginning
      - end
    default: end
  - name: timezone
    description: Timezone to use when parsing the timestamp
    type: timezone
    default: UTC
  - name: offset_storage_dir
    description: The directory that the offset storage file will be created
    type: string
    default: ${env:OIQ_OTEL_COLLECTOR_HOME}/storage
  - name: save_log_record_original
    description: Enable to preserve the original log message in a `log.record.original` key.
    type: bool
    default: false
template: |
  extensions:
    file_storage:
      directory:  {{ .offset_storage_dir }}
  receivers:
    filelog/standalone:
      storage: file_storage
      include:
        {{ range $i, $fp := .standalone_file_path  }}
          - '{{ $fp }}'
        {{ end }}
      start_at: {{ .start_at }}
      multiline:
        line_start_pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}'
      attributes:
        log_type: wildfly.standalone
      operators:
        - id: wildfly_parser
          type: regex_parser
          regex: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3})\s+(?P<level>\w+)(?:\s+\[(?P<source>.+?)\])?(?:\s+\((?P<thread>.+?)\))?\s+(?P<message>(?:(?P<messageCode>[\d\w]+):)?[^\n]*)'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%Y-%m-%d %H:%M:%S,%L'
            location: {{ .timezone }}
          severity:
            parse_from: attributes.level
    
    filelog/domain_server:
      storage: file_storage
      include:
        {{ range $i, $fp := .domain_server_path  }}
          - '{{ $fp }}'
        {{ end }}
      start_at: {{ .start_at }}
      multiline:
        line_start_pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}'
      attributes:
        log_type: wildfly.domain
      operators:
        {{ if .save_log_record_original }}
        - id: save_log_record_original
          type: copy
          from: body
          to: attributes["log.record.original"]
        {{ end }}
        - id: wildfly_parser
          type: regex_parser
          regex: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3})\s+(?P<level>\w+)(?:\s+\[(?P<source>.+?)\])?(?:\s+\((?P<thread>.+?)\))?\s+(?P<message>(?:(?P<messageCode>[\d\w]+):)?[^\n]*)'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%Y-%m-%d %H:%M:%S,%L'
            location: {{ .timezone }}
          severity:
            parse_from: attributes.level

    filelog/domain_controller:
      storage: file_storage
      include:
      {{ range $i, $fp := .domain_controller_path  }}
        - '{{ $fp }}'
      {{ end }}
      start_at: {{ .start_at }}
      multiline:
        line_start_pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}'
      attributes:
        log_type: wildfly.domain_controller
      operators:
        {{ if .save_log_record_original }}
        - id: save_log_record_original
          type: copy
          from: body
          to: attributes["log.record.original"]
        {{ end }}
        - id: wildfly_parser
          type: regex_parser
          regex: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3})\s+(?P<level>\w+)(?:\s+\[(?P<source>.+?)\])?(?:\s+\((?P<thread>.+?)\))?\s+(?P<message>(?:(?P<messageCode>[\d\w]+):)?[^\n]*)'
          timestamp:
            parse_from: attributes.timestamp
            layout: '%Y-%m-%d %H:%M:%S,%L'
            location: {{ .timezone }}
          severity:
            parse_from: attributes.level

  service:
    extensions: [file_storage]
    pipelines:
      logs:
        receivers:  
          - filelog/standalone
        {{ if .enable_domain_server }}
          - filelog/domain_server
        {{ end }}
        {{ if .enable_domain_controller }}
          - filelog/domain_controller
        {{ end }}
